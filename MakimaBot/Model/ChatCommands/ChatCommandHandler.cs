using System.Text.RegularExpressions;
using Telegram.Bot;
using Telegram.Bot.Types;

namespace MakimaBot.Model;

public class ChatCommandHandler
{
    private readonly IEnumerable<ChatCommand> _commands;

    public ChatCommandHandler(IEnumerable<ChatCommand> commands)
    {
        _commands = commands;
    }

    private const string CommandPattern = @"^@makima_daily_bot\s*([a-z]*)\s*(.*)$";

    public async Task HandleAsync(
        Message message,
        ChatState chatState,
        ITelegramTextMessageSender _telegramTextMessageSender,
        CancellationToken cancellationToken)
    {
        var match = Regex.Matches(message.Text, CommandPattern, RegexOptions.IgnoreCase);

        var commandName = match.First().Groups[1].Value;
        if (string.IsNullOrEmpty(commandName))
        {
            await _telegramTextMessageSender.SendTextMessageAsync(
                chatState.ChatId,
                "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞üíî @makima_daily_bot <–∫–æ–º–∞–Ω–¥–∞> <–ø–∞—Ä–∞–º–µ—Ç—Ä—ã>", // todo: —Å–æ–æ–±—â–∏—Ç—å —é–∑–µ—Ä—É, —á—Ç–æ –º–µ–Ω—à–Ω —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞
                replyToMessageId: message.MessageId,
                cancellationToken: cancellationToken);
            return;
        }

        var allowedCommands = _commands.Select(command => command.Name).ToArray(); // todo: —á—Ç–æ? –∑–∞—á–µ–º —Å–µ–π—á–∞—Å? –ø–æ—á–µ–º—É? –ö–∞–∂–µ—Ç—Å—è —Ç—É—Ç —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–µ–º–∏—Å—Å–∏–πüíî

        var currentCommand = _commands.SingleOrDefault(command => command.Name == commandName);
        if (currentCommand is null)
        {
            await _telegramTextMessageSender.SendTextMessageAsync(
                chatState.ChatId,
                "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞üôç‚Äç‚ôÄÔ∏è –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (list)",
                replyToMessageId: message.MessageId,
                cancellationToken: cancellationToken);
            return;
        }

        var rawParameters = match.First().Groups[2].Value;
        if (string.IsNullOrEmpty(rawParameters))
        {
            await _telegramTextMessageSender.SendTextMessageAsync(
                chatState.ChatId,
                "–ö–∞–∂–µ—Ç—Å—è –≤—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—åü§¶‚Äç‚ôÄÔ∏è @makima_daily_bot <gpt> <promt>",
                replyToMessageId: message.MessageId,
                cancellationToken: cancellationToken);
            return;
        }

        await currentCommand.ExecuteAsync(message, chatState, rawParameters, _telegramTextMessageSender, cancellationToken); 
    }
}
